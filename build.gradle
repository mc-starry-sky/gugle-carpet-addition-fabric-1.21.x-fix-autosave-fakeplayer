plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = "mc" + project.minecraft_version + "-" + project.mod_version
group = project.maven_group

if (build_number != "undefined") {
    version += "+build.${build_number}"
}

repositories {
//    maven {
//        name = 'ParchmentMC'
//        url = 'https://maven.parchmentmc.org'
//    }
    maven {
        url "https://www.cursemaven.com"
    }
    mavenCentral()
}

loom {
    accessWidenerPath = file("src/main/resources/gca.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
//        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // fabric-carpet
    modImplementation("curse.maven:carpet-349239:${project.carpet_core_version}")
    include(implementation 'jep:jep:2.24')
    // xaeromap
//     modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
//     modImplementation("curse.maven:xaeros-world-map-317780:5658242")
//     modImplementation("curse.maven:xaeros-mini-map-263420:5437650")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
